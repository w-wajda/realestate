# Generated by Django 4.0 on 2022-02-14 20:06

from django.db import migrations, models
import django.db.models.deletion
import gfklookupwidget.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100, verbose_name='Street')),
                ('street_number', models.CharField(max_length=10, verbose_name='Street number')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='ZIP Code')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('surname', models.CharField(max_length=50, verbose_name='Surname')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile number')),
            ],
            options={
                'verbose_name': 'Client',
            },
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Building plot'), (1, 'Agricultural plot'), (2, 'Investment plot')], verbose_name='Plot type')),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Total plot area')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realestates.address', verbose_name='Plot address')),
            ],
            options={
                'verbose_name': 'Plot',
            },
        ),
        migrations.CreateModel(
            name='Realestate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Multi-family house'), (1, 'Single-family house')], verbose_name='Realestete type')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Total realestete area')),
                ('number_floors', models.PositiveSmallIntegerField(verbose_name='Number floors')),
                ('year_built', models.DateField(verbose_name='Year built')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('plot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestates.plot', verbose_name='Plot address')),
            ],
            options={
                'verbose_name': 'Realestate',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Sale'), (1, 'Lease')], verbose_name='Offer type')),
                ('price', models.PositiveSmallIntegerField(verbose_name='Price')),
                ('description', models.TextField(verbose_name='Description')),
                ('object_id', gfklookupwidget.fields.GfkLookupField()),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='realestates.client', verbose_name='Client')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'realestates'), ('model', 'plot')), models.Q(('app_label', 'realestates'), ('model', 'base')), models.Q(('app_label', 'realestates'), ('model', 'flat')), models.Q(('app_label', 'realestates'), ('model', 'garage')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Offer',
            },
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Underground'), (1, 'External space'), (2, 'Detached'), (3, 'Attached')], verbose_name='Garage type')),
                ('parking_number', models.PositiveSmallIntegerField(verbose_name='Parking space number')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('realestate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestates.realestate', verbose_name='Realestate')),
            ],
            options={
                'verbose_name': 'Garage',
            },
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.DecimalField(decimal_places=2, default='0', max_digits=7, verbose_name='Total realestete area')),
                ('floor_number', models.PositiveSmallIntegerField(verbose_name='Floor number')),
                ('apartment_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Apartment number')),
                ('rooms', models.PositiveSmallIntegerField(verbose_name='Number of rooms')),
                ('kitchen_type', models.IntegerField(choices=[(0, 'Open'), (1, 'Closed')], verbose_name='Kitchen type')),
                ('bathroom', models.PositiveSmallIntegerField(verbose_name='Number of bathroom')),
                ('balcony_type', models.IntegerField(choices=[(0, 'Balcony'), (1, 'Loggia'), (2, 'Terrace'), (3, 'No balcony')], null=True, verbose_name='Balcony type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('realestate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestates.realestate', verbose_name='Realestate')),
            ],
            options={
                'verbose_name': 'Flat',
            },
        ),
    ]
